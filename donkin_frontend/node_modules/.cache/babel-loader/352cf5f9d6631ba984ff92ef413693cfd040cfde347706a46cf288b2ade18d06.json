{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useRef, useState } from \"react\";\nconst MainSlideCall = () => {\n  _s();\n  const [bannerOrder, setBanner] = useState(1);\n  const bannerRef = useRef(1);\n  const [mainorder, setMaim] = useState(1);\n  const MainRef = useRef(1);\n  const [topBannerSet, setTopBannerSet] = useState(false);\n  const [mainBannerSet, setMainBannerSet] = useState(false);\n  const setOrder = useCallback((num, type) => {\n    console.log(num);\n    type === \"top\" ? bannerRef.current = num : MainRef.current = num;\n    type === \"top\" ? setBanner(num) : setMaim(num);\n  }, []);\n  const bannerPlay = () => {\n    return setInterval(() => {\n      slideCall(bannerRef.current === 3 ? 1 : bannerRef.current + 1, \"top\", 500);\n    }, 6500);\n  };\n  const mainPlay = () => {\n    return setInterval(() => {\n      slideCall(MainRef.current === 6 ? 1 : MainRef.current + 1, \"main\", 500);\n    }, 6500);\n  };\n  const slidePlay = type => {\n    if (type === \"all\") {\n      bannerPlay();\n      mainPlay();\n    } else if (type === \"top\") {\n      bannerPlay();\n    } else if (type === \"main\") {\n      mainPlay();\n    }\n  };\n  const onClickButton = (num, type) => {\n    clearInterval(slideCall(num, type, 500));\n    slideCall(num, type, 500);\n    clearInterval(type === \"top\" ? bannerPlay(type) : mainPlay(type));\n  };\n  const slideCall = (num, type, time) => {\n    type === \"top\" ? setTopBannerSet(true) : setMainBannerSet(true);\n    setTimeout(() => {\n      type === \"top\" ? setTopBannerSet(false) : setMainBannerSet(false);\n      setOrder(num, type);\n    }, time);\n  };\n  return [bannerOrder, mainorder, topBannerSet, mainBannerSet, {\n    slidePlay,\n    onClickButton\n  }];\n};\n_s(MainSlideCall, \"KLNzW1QSPGfxFd6P8/xWp00SL88=\");\n_c = MainSlideCall;\nexport default MainSlideCall;\nvar _c;\n$RefreshReg$(_c, \"MainSlideCall\");","map":{"version":3,"names":["useCallback","useRef","useState","MainSlideCall","_s","bannerOrder","setBanner","bannerRef","mainorder","setMaim","MainRef","topBannerSet","setTopBannerSet","mainBannerSet","setMainBannerSet","setOrder","num","type","console","log","current","bannerPlay","setInterval","slideCall","mainPlay","slidePlay","onClickButton","clearInterval","time","setTimeout","_c","$RefreshReg$"],"sources":["C:/dunkindonuts/donkin_frontend/src/mainSlideCall.js"],"sourcesContent":["import { useCallback, useRef, useState } from \"react\";\r\n\r\n\r\nconst MainSlideCall = () =>{\r\n\r\n    const [bannerOrder,setBanner] = useState(1);\r\n    const bannerRef = useRef(1)\r\n  \r\n    const [mainorder,setMaim] = useState(1);\r\n    const MainRef = useRef(1)\r\n\r\n    const [topBannerSet, setTopBannerSet] = useState(false);\r\n    const [mainBannerSet, setMainBannerSet] = useState(false);\r\n\r\n    const setOrder = useCallback((num,type) => {\r\n        console.log(num)\r\n        type===\"top\"?bannerRef.current =num: MainRef.current = num\r\n        type===\"top\"?setBanner(num): setMaim(num)\r\n  }, []);\r\n\r\n  const bannerPlay = ()=>{\r\n    return setInterval(() => {     \r\n        slideCall(bannerRef.current===3?1:bannerRef.current+1,\"top\",500);\r\n    }, 6500); \r\n };\r\n const mainPlay = ()=>{\r\n    return setInterval(() => {     \r\n        slideCall(MainRef.current===6?1:MainRef.current+1,\"main\",500);\r\n    }, 6500); \r\n };\r\n const slidePlay=(type)=>{\r\n    if(type===\"all\"){\r\n        bannerPlay()\r\n        mainPlay()\r\n    }else if(type===\"top\"){\r\n        bannerPlay()\r\n    }else if(type===\"main\"){\r\n        mainPlay()\r\n    }\r\n }\r\n const onClickButton = (num,type)=>{\r\n    clearInterval(slideCall(num,type,500))\r\n    slideCall(num,type,500)\r\n    clearInterval((type===\"top\"?bannerPlay(type):mainPlay(type)));\r\n};\r\n    const slideCall = (num,type,time) =>{\r\n            type===\"top\"?setTopBannerSet(true):setMainBannerSet(true)\r\n            setTimeout(()=>{\r\n                type===\"top\"?setTopBannerSet(false):setMainBannerSet(false)\r\n                setOrder(num,type);\r\n            },time)     \r\n        };\r\n    return [bannerOrder,mainorder,topBannerSet,mainBannerSet,{slidePlay,onClickButton},];    \r\n\r\n\r\n}\r\nexport default MainSlideCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}